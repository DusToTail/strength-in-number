//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.6.3
//     from Assets/Scripts/Input/GridBuilder_InputAction.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @GridBuilder_InputAction: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @GridBuilder_InputAction()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""GridBuilder_InputAction"",
    ""maps"": [
        {
            ""name"": ""GridBuilder"",
            ""id"": ""b1b4c2e8-7f81-49fd-97f0-f3f3506bd762"",
            ""actions"": [
                {
                    ""name"": ""MousePosition"",
                    ""type"": ""Value"",
                    ""id"": ""0f863293-21d0-42b2-a661-498aded324b3"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""MouseSelect"",
                    ""type"": ""Button"",
                    ""id"": ""d25a7a99-e96d-458a-bb99-62e0a4712a70"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MouseDeselect"",
                    ""type"": ""Button"",
                    ""id"": ""32158a17-e392-4620-b24b-71745a225a5c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Left"",
                    ""type"": ""Button"",
                    ""id"": ""1a695a23-97a2-451b-b0a3-b88f56999814"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Right"",
                    ""type"": ""Button"",
                    ""id"": ""6ecf4a3c-f42d-4b84-bc87-133060b1a746"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Up"",
                    ""type"": ""Button"",
                    ""id"": ""d2ff467d-b357-4926-ae65-d1e2a40b2dcc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Down"",
                    ""type"": ""Button"",
                    ""id"": ""86b8e842-0093-4642-a438-2cadde8f1a09"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Confirm"",
                    ""type"": ""Button"",
                    ""id"": ""3172984c-35b4-4229-9fe8-55ae0401c01e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Cancel"",
                    ""type"": ""Button"",
                    ""id"": ""55b39fff-dbf0-4110-82b8-1266342e8d25"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""080c2986-9616-4442-ba24-4007590e24b4"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MousePosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3148e9a4-1b40-4c5d-8dc0-52b120af2276"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": ""Press(behavior=1)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseSelect"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c26996df-418d-4114-9c34-8e0f376892e1"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": ""Press(behavior=1)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseDeselect"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a157473d-c159-4102-ad0d-6d48de45ddd7"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""473041d7-44ed-46a4-9247-1c2feb77a1f8"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""61dace81-dd63-4cda-b500-10bbc0c66fba"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9cf11f31-5f78-4119-a158-6132dc008a35"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e2beb6ac-c9a3-4cf3-bdf0-5cc49a6c9018"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Up"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b284e7d2-60fd-4dc8-82bc-c9f266d2ad3e"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Up"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8d223db6-7d40-4f62-bf5e-45a87701c9c7"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Down"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7ca7fbf0-716a-4e1b-b388-c148913f5312"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Down"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""528f4eef-d85f-4f90-ac66-32d85c6c1f45"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cancel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ba45ab71-e9ee-4923-890e-f65797c6b007"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Confirm"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // GridBuilder
        m_GridBuilder = asset.FindActionMap("GridBuilder", throwIfNotFound: true);
        m_GridBuilder_MousePosition = m_GridBuilder.FindAction("MousePosition", throwIfNotFound: true);
        m_GridBuilder_MouseSelect = m_GridBuilder.FindAction("MouseSelect", throwIfNotFound: true);
        m_GridBuilder_MouseDeselect = m_GridBuilder.FindAction("MouseDeselect", throwIfNotFound: true);
        m_GridBuilder_Left = m_GridBuilder.FindAction("Left", throwIfNotFound: true);
        m_GridBuilder_Right = m_GridBuilder.FindAction("Right", throwIfNotFound: true);
        m_GridBuilder_Up = m_GridBuilder.FindAction("Up", throwIfNotFound: true);
        m_GridBuilder_Down = m_GridBuilder.FindAction("Down", throwIfNotFound: true);
        m_GridBuilder_Confirm = m_GridBuilder.FindAction("Confirm", throwIfNotFound: true);
        m_GridBuilder_Cancel = m_GridBuilder.FindAction("Cancel", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // GridBuilder
    private readonly InputActionMap m_GridBuilder;
    private List<IGridBuilderActions> m_GridBuilderActionsCallbackInterfaces = new List<IGridBuilderActions>();
    private readonly InputAction m_GridBuilder_MousePosition;
    private readonly InputAction m_GridBuilder_MouseSelect;
    private readonly InputAction m_GridBuilder_MouseDeselect;
    private readonly InputAction m_GridBuilder_Left;
    private readonly InputAction m_GridBuilder_Right;
    private readonly InputAction m_GridBuilder_Up;
    private readonly InputAction m_GridBuilder_Down;
    private readonly InputAction m_GridBuilder_Confirm;
    private readonly InputAction m_GridBuilder_Cancel;
    public struct GridBuilderActions
    {
        private @GridBuilder_InputAction m_Wrapper;
        public GridBuilderActions(@GridBuilder_InputAction wrapper) { m_Wrapper = wrapper; }
        public InputAction @MousePosition => m_Wrapper.m_GridBuilder_MousePosition;
        public InputAction @MouseSelect => m_Wrapper.m_GridBuilder_MouseSelect;
        public InputAction @MouseDeselect => m_Wrapper.m_GridBuilder_MouseDeselect;
        public InputAction @Left => m_Wrapper.m_GridBuilder_Left;
        public InputAction @Right => m_Wrapper.m_GridBuilder_Right;
        public InputAction @Up => m_Wrapper.m_GridBuilder_Up;
        public InputAction @Down => m_Wrapper.m_GridBuilder_Down;
        public InputAction @Confirm => m_Wrapper.m_GridBuilder_Confirm;
        public InputAction @Cancel => m_Wrapper.m_GridBuilder_Cancel;
        public InputActionMap Get() { return m_Wrapper.m_GridBuilder; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GridBuilderActions set) { return set.Get(); }
        public void AddCallbacks(IGridBuilderActions instance)
        {
            if (instance == null || m_Wrapper.m_GridBuilderActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_GridBuilderActionsCallbackInterfaces.Add(instance);
            @MousePosition.started += instance.OnMousePosition;
            @MousePosition.performed += instance.OnMousePosition;
            @MousePosition.canceled += instance.OnMousePosition;
            @MouseSelect.started += instance.OnMouseSelect;
            @MouseSelect.performed += instance.OnMouseSelect;
            @MouseSelect.canceled += instance.OnMouseSelect;
            @MouseDeselect.started += instance.OnMouseDeselect;
            @MouseDeselect.performed += instance.OnMouseDeselect;
            @MouseDeselect.canceled += instance.OnMouseDeselect;
            @Left.started += instance.OnLeft;
            @Left.performed += instance.OnLeft;
            @Left.canceled += instance.OnLeft;
            @Right.started += instance.OnRight;
            @Right.performed += instance.OnRight;
            @Right.canceled += instance.OnRight;
            @Up.started += instance.OnUp;
            @Up.performed += instance.OnUp;
            @Up.canceled += instance.OnUp;
            @Down.started += instance.OnDown;
            @Down.performed += instance.OnDown;
            @Down.canceled += instance.OnDown;
            @Confirm.started += instance.OnConfirm;
            @Confirm.performed += instance.OnConfirm;
            @Confirm.canceled += instance.OnConfirm;
            @Cancel.started += instance.OnCancel;
            @Cancel.performed += instance.OnCancel;
            @Cancel.canceled += instance.OnCancel;
        }

        private void UnregisterCallbacks(IGridBuilderActions instance)
        {
            @MousePosition.started -= instance.OnMousePosition;
            @MousePosition.performed -= instance.OnMousePosition;
            @MousePosition.canceled -= instance.OnMousePosition;
            @MouseSelect.started -= instance.OnMouseSelect;
            @MouseSelect.performed -= instance.OnMouseSelect;
            @MouseSelect.canceled -= instance.OnMouseSelect;
            @MouseDeselect.started -= instance.OnMouseDeselect;
            @MouseDeselect.performed -= instance.OnMouseDeselect;
            @MouseDeselect.canceled -= instance.OnMouseDeselect;
            @Left.started -= instance.OnLeft;
            @Left.performed -= instance.OnLeft;
            @Left.canceled -= instance.OnLeft;
            @Right.started -= instance.OnRight;
            @Right.performed -= instance.OnRight;
            @Right.canceled -= instance.OnRight;
            @Up.started -= instance.OnUp;
            @Up.performed -= instance.OnUp;
            @Up.canceled -= instance.OnUp;
            @Down.started -= instance.OnDown;
            @Down.performed -= instance.OnDown;
            @Down.canceled -= instance.OnDown;
            @Confirm.started -= instance.OnConfirm;
            @Confirm.performed -= instance.OnConfirm;
            @Confirm.canceled -= instance.OnConfirm;
            @Cancel.started -= instance.OnCancel;
            @Cancel.performed -= instance.OnCancel;
            @Cancel.canceled -= instance.OnCancel;
        }

        public void RemoveCallbacks(IGridBuilderActions instance)
        {
            if (m_Wrapper.m_GridBuilderActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IGridBuilderActions instance)
        {
            foreach (var item in m_Wrapper.m_GridBuilderActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_GridBuilderActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public GridBuilderActions @GridBuilder => new GridBuilderActions(this);
    public interface IGridBuilderActions
    {
        void OnMousePosition(InputAction.CallbackContext context);
        void OnMouseSelect(InputAction.CallbackContext context);
        void OnMouseDeselect(InputAction.CallbackContext context);
        void OnLeft(InputAction.CallbackContext context);
        void OnRight(InputAction.CallbackContext context);
        void OnUp(InputAction.CallbackContext context);
        void OnDown(InputAction.CallbackContext context);
        void OnConfirm(InputAction.CallbackContext context);
        void OnCancel(InputAction.CallbackContext context);
    }
}
